@model ThomasSalon.UI.Models.EditViewModel

@{
    ViewBag.Title = "Edit Admin";
}
<div class="container pt-5">
    <h2 class="admin-title">Editar usuario</h2>

    <div class="row justify-content-center">
        <div class="col-md-8">
            @using (Html.BeginForm("EditAdmin", "Account", FormMethod.Post)) // Especificar acción y método POST
            {
                @Html.AntiForgeryToken()

            <div class="form-horizontal border p-4 rounded shadow-sm bg-light">

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @Html.HiddenFor(model => model.IdPersona) <!-- Asegurar que el Id se envía -->
                <!-- Email -->
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-2" })
                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>

                <!-- Nombre -->
                <div class="form-group mb-3" id="nombreField">
                    @Html.LabelFor(model => model.Nombre, new { @class = "control-label col-md-2" })
                 
                        @Html.TextBoxFor(model => model.Persona.Nombre, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                  
                </div>

                <!-- Género -->
                <div class="form-group mb-3" id="generoField">
                    @Html.LabelFor(model => model.Genero, new { @class = "control-label col-md-2" })
                   
                        @Html.DropDownListFor(model => model.Persona.Genero, new List<SelectListItem>
                        {
                            new SelectListItem { Text = "Masculino", Value = "M" },
                            new SelectListItem { Text = "Femenino", Value = "F" }
                        }, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
                   
                </div>

                <!-- Dirección -->
                <div class="form-group mb-3" id="direccionField">
                    @Html.LabelFor(model => model.Direccion, new { @class = "control-label col-md-2" })
                    
                        @Html.TextBoxFor(model => model.Persona.Direccion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
                 
                </div>

                <!-- Edad -->
                <div class="form-group mb-3" id="edadField">
                    @Html.LabelFor(model => model.Edad, new { @class = "control-label col-md-2" })
                 
                        @Html.TextBoxFor(model => model.Persona.Edad, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
               
                </div>
                <!-- Edad -->
                <div class="form-group mb-3" id="telefonoField">
                    @Html.LabelFor(model => model.Telefono, new { @class = "control-label col-md-2" })
                  
                        @Html.TextBoxFor(model => model.Persona.Telefono, new { @class = "form-control", type = "number" })
                        @Html.ValidationMessageFor(model => model.Telefono, "", new { @class = "text-danger" })
                  
                </div>

                <!-- Identificación -->
                <div class="form-group mb-3" id="identificacionField">
                    @Html.LabelFor(model => model.Identificacion, new { @class = "control-label col-md-2" })
                  
                        @Html.TextBoxFor(model => model.Persona.Identificacion, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
                    </div>
               

                <!-- Estado -->
                <div class="form-group mb-3" id="estadoField">
                    @Html.LabelFor(model => model.IdEstado, new { @class = "control-label col-md-2" })
                  
                        @Html.TextBoxFor(model => model.IdEstado, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdEstado, "", new { @class = "text-danger" })
                    </div>
               

                @if (Model.Rol != "Usuario")
                {
                    <div class="form-group mb-3">
                        @Html.LabelFor(model => model.Rol, new { @class = "control-label col-md-2" })
                     
                            @Html.DropDownListFor(model => model.Rol, (SelectList)ViewBag.Roles, new { @class = "form-control", id = "rolDropdown" })
                            @Html.ValidationMessageFor(model => model.Rol, "", new { @class = "text-danger" })
                        </div>
                   
                }

                <div class="form-group mb-3" id="sucursalesField" style="display: none;">
                    @Html.LabelFor(model => model.IdSucursal, htmlAttributes: new { @class = "control-label col-md-2" })
                 
                        @Html.DropDownListFor(model => model.IdSucursal,
                            ViewBag.Sucursales != null ? ViewBag.Sucursales as SelectList : new SelectList(new List<SelectListItem>()),
                            new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.IdSucursal, "", new { @class = "text-danger" })
                    </div>
            

                <div class="form-group text-center">
                    <input type="submit" value="Guardar cambios" class="btn btn-stormy px-4" />
                    <a href="@Request.UrlReferrer" class="btn btn-admin px-4 ms-2">Volver a la lista de productos</a>

                </div>
            </div>
            }

        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<script>
    document.addEventListener("DOMContentLoaded", function () {
        var rolDropdown = document.getElementById("rolDropdown");

        var fields = {
            "sucursalesField": ["Administrador"],
            "nombreField": ["Usuario"],
            "generoField": ["Usuario"],
            "direccionField": ["Usuario"],
            "telefonoField": ["Usuario"],
            "edadField": ["Usuario"],
            "identificacionField": ["Usuario"],
            "estadoField": ["Usuario"]
        };

        function toggleFields() {
            var selectedRole = rolDropdown.value;

            // Recorremos los campos y los mostramos u ocultamos según el rol
            Object.keys(fields).forEach(field => {
                document.getElementById(field).style.display = fields[field].includes(selectedRole) ? "block" : "none";
            });
        }

        toggleFields(); // Llamada inicial
        rolDropdown.addEventListener("change", toggleFields); // Evento para cambios de rol
    });
</script>

