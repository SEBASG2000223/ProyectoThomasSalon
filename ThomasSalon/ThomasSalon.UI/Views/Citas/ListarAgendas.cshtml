@model IEnumerable<ThomasSalon.Abstracciones.Modelos.Citas.CitasDto>

@{
    ViewBag.Title = "Listar Agendas";
    var idSucursal = TempData["IdSucursalSeleccionada"] ?? 0; // Se obtiene idSucursal o 0 si es null
}



<div id='calendar'></div>



@section scripts
 {
    <script>
    document.addEventListener('DOMContentLoaded', function () {
        var calendarEl = document.getElementById('calendar');

        // Obtén el idSucursal desde TempData o pasa un valor directamente si es necesario
        var idSucursal = @TempData["IdSucursalSeleccionada"];

        var calendar = new FullCalendar.Calendar(calendarEl, {
            initialView: 'dayGridMonth',
            locale: 'es',
            headerToolbar: {
                left: 'prev,next today',
                center: 'title',
                right: 'addEventButton,dayGridMonth,timeGridWeek,timeGridDay'
            },
            customButtons: {
                addEventButton: {
                    text: 'Agendar cita',
                    click: function () {
                        var dateStr = prompt('Enter a date in YYYY-MM-DD format');
                        var date = new Date(dateStr + 'T00:00:00'); // will be in local time

                        if (!isNaN(date.valueOf())) { // valid?
                            calendar.addEvent({
                                title: 'dynamic event',
                                start: date,
                                allDay: true
                            });
                            alert('Great. Now, update your database...');
                        } else {
                            alert('Invalid date.');
                        }
                    }
                }
            },
            // Aquí están los eventos que se deben cargar desde el servidor
            events: function (fetchInfo, successCallback, failureCallback) {
                fetch('/Citas/ObtenerEventos?idSucursal=' + idSucursal)
                    .then(response => response.json())
                    .then(data => successCallback(data))
                    .catch(error => failureCallback(error));
            }
        });

        calendar.render();
    });
    </script>

}
