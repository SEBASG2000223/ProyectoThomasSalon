@model ThomasSalon.Abstracciones.Modelos.Colaboradores.ColaboradoresDto

@{
    ViewBag.Title = "Edit";
}
<div class="container pt-5">
    <h2>Edit</h2>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>ColaboradoresDto</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Persona.IdPersona)
    <div class="form-group">
        @Html.HiddenFor(model => model.IdColaborador)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Persona.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Persona.Nombre, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Persona.Nombre, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Género -->
    <div class="form-group" id="generoField">
        @Html.LabelFor(model => model.Persona.Genero, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Persona.Genero, new List<SelectListItem>
            {
                new SelectListItem { Text = "Masculino", Value = "M" },
                new SelectListItem { Text = "Femenino", Value = "F" }
            }, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Persona.Genero, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Persona.Telefono, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Persona.Telefono, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Persona.Telefono, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Identificación -->
    <div class="form-group" id="identificacionField">
        @Html.LabelFor(model => model.Identificacion, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Persona.Identificacion, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Identificacion, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Dirección -->
    <div class="form-group" id="direccionField">
        @Html.LabelFor(model => model.Direccion, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Persona.Direccion, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Direccion, "", new { @class = "text-danger" })
        </div>
    </div>
    <!-- Edad -->
    <div class="form-group" id="edadField">
        @Html.LabelFor(model => model.Edad, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.Persona.Edad, new { @class = "form-control", type = "number" })
            @Html.ValidationMessageFor(model => model.Edad, "", new { @class = "text-danger" })
        </div>
    </div>

    <!-- Salario Día -->
    <div class="form-group" id="salarioField">
        @Html.LabelFor(model => model.SalarioDia, new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.SalarioDia, new { @class = "form-control", type = "decimal", step = "0.01" })
            @Html.ValidationMessageFor(model => model.SalarioDia, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.HiddenFor(model => model.IdEstado)
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
    }

    <div>
        @Html.ActionLink("Back to List", "ListarColaboradores")
    </div>
</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }

